# This is a basic workflow to help you get started with Actions

name: Continuous Integration

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events for all branches
  push:
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called test
  test:
    name: Test on Python ${{ matrix.python-version }}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -l {0}
    
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9']
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out repository code
        uses: actions/checkout@v2
      
      # Action provided by conda-incubator to setup conda env, doesn't activate the base environment
      # but 'project' environment
      - name: Setup miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: 'latest'
          python-version: ${{ matrix.python-version }}
          auto-update-conda: true
          auto-activate-base: false
          activate-environment: project
          environment-file: environment.yml
          
      
      # Default action: run the tests
      - name: Run tests
        run: |
          conda info -a
          pytest -sv --cov=. saru/tests/
          sphinx-build -b doctest doc sphinx
          python run.py --help
          python run.py

      - name: Build documentation
        if: ${{ matrix.python-version == '3.9' }} 
        run: |
          sphinx-build doc sphinx
          touch sphinx/.nojekyll

      - name: Deploy documentation to GitHub Pages
        if: ${{ matrix.python-version == '3.9' && startsWith(github.ref, 'refs/tags') }}
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: sphinx
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload coverage to coverall.io
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.python-version }}
          COVERALLS_PARALLEL: true
        run: |
          conda info -a
          coveralls --service=github

  coveralls:
    name: Indicate completion to coveralls.io
    needs: test
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
    - name: Finished
      run: |
        pip3 install --upgrade coveralls
        coveralls --service=github --finish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
